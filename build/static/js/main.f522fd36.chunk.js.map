{"version":3,"sources":["Components/UI/MyModal/MyModal.module.css","Components/UI/button/MyButton.module.css","Components/UI/Loader/Loader.module.css","Components/UI/input/MyInput.module.css","Components/UI/button/MyButton.js","context/index.js","Components/UI/Navbar/Navbar.js","hooks/useFetching.js","API/PostService.js","Components/UI/Loader/Loader.js","pages/PostIdPage.js","hooks/usePosts.js","Components/utils/pages.js","Components/UI/input/MyInput.js","Components/PostForm.js","Components/UI/select/MySelect.js","Components/PostFilter.js","Components/UI/MyModal/MyModal.js","Components/PostItem.js","Components/PostList.js","Components/UI/pagination/Pagination.js","pages/Posts.js","router/index.js","pages/About.js","hooks/useObserver.js","pages/Login.js","Components/AppRouter.js","App.js","index.js"],"names":["module","exports","MyButton","children","props","className","classes","myBtn","AuthContext","createContext","Navbar","useContext","setIsAuth","isAuth","onClick","localStorage","removeItem","to","useFetching","callback","useState","isLoading","setIsLoading","error","setError","a","message","PostService","limit","page","axios","get","params","_limit","_page","response","id","Loader","cl","loader","PostIdPage","useParams","post","setPost","comments","setComments","getById","data","fetchPostById","getCommentsByPostId","fetchComments","isComLoading","useEffect","title","map","comm","style","marginTop","email","body","usePosts","posts","sort","query","sortedPosts","useMemo","b","localeCompare","useSortedPosts","filter","toLowerCase","includes","getPageCount","totalCount","Math","ceil","MyInput","React","forwardRef","ref","myInput","PostForm","create","value","onChange","e","target","type","placeholder","preventDefault","newPost","Date","now","MySelect","option","defaultValue","event","disabled","name","PostFilter","setFilter","selectedSort","MyModal","visible","setVisible","rootClasses","myModal","push","active","join","myModalContent","stopPropagation","PostItem","router","useHistory","remove","PostList","length","textAlign","TransitionGroup","index","CSSTransition","timeout","classNames","number","Pagination","totalPages","changePage","pagesArray","result","i","getPagesArray","p","Posts","privateRoutes","path","component","exact","setPosts","modal","setModal","setTotalPages","setLimit","setPage","sortedAndSearchedPosts","lastElement","useRef","getAll","headers","fetchPosts","isPostsLoading","postError","canLoad","observer","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","useObserver","margin","height","background","display","justifyContent","publicRoutes","onSubmit","setItem","AppRouter","route","App","getItem","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f522fd36.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myModal\":\"MyModal_myModal__1Zo6p\",\"myModalContent\":\"MyModal_myModalContent__3VLro\",\"active\":\"MyModal_active__OFCF9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myBtn\":\"MyButton_myBtn__2dGhg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1GqrP\",\"rotate\":\"Loader_rotate__adT82\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myInput\":\"MyInput_myInput__315_M\"};","import React from 'react';\r\nimport classes from './MyButton.module.css'\r\n\r\nconst MyButton = ({children, ...props}) => {\r\n    return (\r\n        <button {...props} className={classes.myBtn}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default MyButton;","import {createContext} from 'react';\r\n\r\nexport const AuthContext = createContext(null);","import React, {useContext} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport MyButton from \"../button/MyButton\";\r\nimport {AuthContext} from \"../../../context\";\r\n\r\nconst Navbar = () => {\r\n    const {isAuth, setIsAuth} = useContext(AuthContext);\r\n\r\n\r\n    const logout = () => {\r\n        setIsAuth(false);\r\n        localStorage.removeItem('auth');\r\n    };\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <MyButton onClick={logout}>\r\n                Logout\r\n            </MyButton>\r\n            <div className=\"navbar__links\">\r\n                <Link to=\"/about\">About Site</Link>\r\n                <Link to=\"/posts\">Posts</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import {useState} from \"react\";\r\n\r\nexport const useFetching = (callback) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const fetching = async (...args) => {\r\n      try {\r\n          setIsLoading(true);\r\n          await callback(...args);\r\n      }  catch (e) {\r\n          setError(e.message);\r\n      } finally {\r\n          setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    return [fetching, isLoading, error];\r\n}","import axios from \"axios\";\r\n\r\nexport default class PostService {\r\n    static async getAll(limit = 10, page = 1) {\r\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\r\n            params: {\r\n                _limit: limit,\r\n                _page: page,\r\n            }\r\n        });\r\n        return response;\r\n    }\r\n\r\n    static async getById(id) {\r\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts/' + id);\r\n        return response;\r\n    }\r\n\r\n    static async getCommentsByPostId(id) {\r\n        const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}/comments`);\r\n        return response;\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\nimport cl from './Loader.module.css';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className={cl.loader}>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React, {useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport {useFetching} from \"../hooks/useFetching\";\r\nimport PostService from \"../API/PostService\";\r\nimport Loader from \"../Components/UI/Loader/Loader\";\r\n\r\nconst PostIdPage = () => {\r\n    const params = useParams();\r\n    const [post, setPost] = useState({});\r\n    const [comments, setComments] = useState([]);\r\n    const [fetchPostById, isLoading, error] = useFetching(async (id) => {\r\n        const response = await PostService.getById(id);\r\n        setPost(response.data);\r\n    });\r\n    const [fetchComments, isComLoading, comError] = useFetching(async (id) => {\r\n        const response = await PostService.getCommentsByPostId(id);\r\n        setComments(response.data);\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchPostById(params.id);\r\n        fetchComments(params.id)\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>You was open a post page with ID = {params.id}</h1>\r\n            {isLoading\r\n                ? <Loader/>\r\n                : <div>{post.id}. {post.title}</div>\r\n            }\r\n            <h1>\r\n                Comments\r\n            </h1>\r\n            {isComLoading\r\n                ?  <Loader/>\r\n                : <div>\r\n                    {comments.map(comm =>\r\n                        <div style={{marginTop: 15}} key={comm.id}>\r\n                            <h5>{comm.email}</h5>\r\n                            <div>{comm.body}</div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostIdPage;","import {useMemo} from \"react\";\r\n\r\nexport const  useSortedPosts = (posts, sort) => {\r\n    const sortedPosts = useMemo(() => {\r\n        if (sort) {\r\n            return ([...posts].sort((a, b) => a[sort].localeCompare(b[sort])));\r\n        }\r\n        return posts;\r\n    }, [sort, posts]);\r\n\r\n    return sortedPosts;\r\n};\r\n\r\nexport const usePosts = (posts, sort, query) => {\r\n    const sortedPosts = useSortedPosts(posts, sort);\r\n\r\n    const sortedAndSearchedPosts = useMemo(() => {\r\n        return sortedPosts.filter(post => post.title.toLowerCase().includes(query.toLowerCase()));\r\n    }, [query, sortedPosts]);\r\n\r\n    return sortedAndSearchedPosts;\r\n};","export const getPageCount = (totalCount, limit) => {\r\n  return Math.ceil(totalCount / limit);\r\n};\r\n\r\nexport const getPagesArray = (totalPages) => {\r\n    let result = [];\r\n    for (let i = 0; i < totalPages; i++) {\r\n        result.push(i + 1);\r\n    }\r\n    return result;\r\n};","import React from 'react';\r\nimport classes from './MyInput.module.css'\r\n\r\nconst MyInput = React.forwardRef((props, ref) => {\r\n    return (\r\n        <input ref={ref} className={classes.myInput} {...props}/>\r\n    );\r\n});\r\n\r\nexport default MyInput;","import React, {useState} from 'react';\r\nimport MyInput from \"./UI/input/MyInput\";\r\nimport MyButton from \"./UI/button/MyButton\";\r\n\r\nconst PostForm = ({create}) => {\r\n    const [post,setPost] = useState({title: '', body: ''});\r\n\r\n    const addNewPost = (e) => {\r\n        e.preventDefault();\r\n        const newPost = {\r\n            ...post, id: Date.now()\r\n        }\r\n        create(newPost);\r\n        setPost({title: '', body: ''});\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                {/*управляемый компонент*/}\r\n                <MyInput\r\n                    value={post.title}\r\n                    onChange={e=>setPost({...post, title: e.target.value})}\r\n                    type=\"text\"\r\n                    placeholder='Post title'\r\n                />\r\n                {/*неуправляемый компонент*/}\r\n                <MyInput\r\n                    value={post.body}\r\n                    onChange={e=>setPost({...post, body: e.target.value})}\r\n                    type=\"text\"\r\n                    placeholder='Post description'\r\n                />\r\n                <MyButton onClick={addNewPost}>Add post</MyButton>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostForm;","import React from 'react';\r\n\r\nconst MySelect = ({option, defaultValue, value, onChange}) => {\r\n\r\n    return (\r\n        <select\r\n            value={value}\r\n            onChange={event => onChange(event.target.value)}\r\n        >\r\n            <option disabled value=\"\">{defaultValue}</option>\r\n            {option.map(option =>\r\n                <option key={option.value} value={option.value}>\r\n                    {option.name}\r\n                </option>\r\n            )}\r\n        </select>\r\n    );\r\n};\r\n\r\nexport default MySelect;","import React from 'react';\r\nimport MyInput from \"./UI/input/MyInput\";\r\nimport MySelect from \"./UI/select/MySelect\";\r\n\r\nconst PostFilter = ({filter, setFilter}) => {\r\n\r\n    return (\r\n        <div>\r\n            <MyInput\r\n                value={filter.query}\r\n                onChange={e => setFilter({...filter, query: e.target.value})}\r\n                placeholder=\"Search...\"\r\n            />\r\n            <MySelect\r\n                value={filter.sort}\r\n                onChange={selectedSort => setFilter({...filter, sort: selectedSort})}\r\n                defaultValue='Sort By'\r\n                option={[\r\n                    {value: 'title', name: 'By Name'},\r\n                    {value: 'body', name: 'By Description'}\r\n                ]}\r\n\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostFilter;","import React from 'react';\r\nimport classes from './MyModal.module.css';\r\n\r\nconst MyModal = ({children, visible, setVisible}) => {\r\n\r\n    const rootClasses = [classes.myModal];\r\n\r\n    if (visible) {\r\n        rootClasses.push(classes.active);\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={rootClasses.join(' ')}\r\n            onClick={()=> setVisible(false)}\r\n        >\r\n            <div\r\n                className={classes.myModalContent}\r\n                onClick={(e)=> e.stopPropagation()}\r\n            >\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyModal;","import React from 'react';\r\nimport MyButton from \"./UI/button/MyButton\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst PostItem = (props) => {\r\n    const router = useHistory();\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post__content\">\r\n                <strong>{props.post.id}. {props.post.title}</strong>\r\n                <div>\r\n                    {props.post.body}\r\n                </div>\r\n            </div>\r\n            <div className=\"post__btns\">\r\n                <MyButton\r\n                    onClick={()=> router.push(`/posts/${props.post.id}`)}\r\n                >\r\n                    Open\r\n                </MyButton>\r\n                <MyButton\r\n                    onClick={() => props.remove(props.post)}\r\n                >\r\n                    Delete\r\n                </MyButton>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostItem;","import React from 'react';\r\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\r\nimport PostItem from \"./PostItem\";\r\n\r\nconst PostList = ({posts, title, remove}) => {\r\n    if (!posts.length) {\r\n        return (\r\n            <h1 style={{textAlign: 'center'}}>\r\n                Posts not found\r\n            </h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 style={{textAlign: 'center'}}>{title}</h1>\r\n            <TransitionGroup>\r\n                {posts.map((post, index) =>(\r\n                    <CSSTransition\r\n                        key={post.id}\r\n                        timeout={500}\r\n                        classNames=\"post\"\r\n                        >\r\n                        <PostItem remove={remove} number={index + 1} post={post}/>\r\n                    </CSSTransition>)\r\n                )}\r\n            </TransitionGroup>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostList;","import React from 'react';\r\nimport {getPagesArray} from \"../../utils/pages\";\r\n\r\nconst Pagination = ({totalPages, page, changePage}) => {\r\n    let pagesArray = getPagesArray(totalPages);\r\n\r\n    return (\r\n        <div className=\"page__wrapper\">\r\n            {pagesArray.map(p =>\r\n                <span\r\n                    onClick={()=>changePage(p)}\r\n                    key={p}\r\n                    className={page === p ? 'page page__current' : 'page'}\r\n                >\r\n                        {p}\r\n                    </span>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import React, {useEffect, useRef, useState} from 'react';\r\nimport '../styles/App.css';\r\nimport {usePosts} from \"../hooks/usePosts\";\r\nimport {useFetching} from \"../hooks/useFetching\";\r\nimport PostService from \"../API/PostService\";\r\nimport {getPageCount} from \"../Components/utils/pages\";\r\nimport PostForm from \"../Components/PostForm\";\r\nimport PostFilter from \"../Components/PostFilter\";\r\nimport MyModal from \"../Components/UI/MyModal/MyModal\";\r\nimport MyButton from \"../Components/UI/button/MyButton\";\r\nimport PostList from \"../Components/PostList\";\r\nimport Pagination from \"../Components/UI/pagination/Pagination\";\r\nimport Loader from \"../Components/UI/Loader/Loader\";\r\nimport {useObserver} from \"../hooks/useObserver\";\r\nimport MySelect from \"../Components/UI/select/MySelect\";\r\n\r\n\r\nfunction Posts() {\r\n    const [posts, setPosts] = useState([]);\r\n    const [filter, setFilter] = useState({sort: '', query: ''});\r\n    const [modal, setModal] = useState(false);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [limit, setLimit] = useState(10);\r\n    const [page, setPage] = useState(1);\r\n    const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\r\n    const lastElement = useRef();\r\n\r\n    const [fetchPosts, isPostsLoading, postError] = useFetching( async (limit, page) => {\r\n        const response = await PostService.getAll(limit, page);\r\n        setPosts([...posts, ...response.data]);\r\n        const totalCount = response.headers['x-total-count'];\r\n        setTotalPages(getPageCount(totalCount, limit));\r\n    });\r\n\r\n    useObserver(lastElement, page < totalPages, isPostsLoading, ()=> {\r\n        setPage(page + 1);\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchPosts(limit, page);\r\n    }, [page, limit]);\r\n\r\n    const createPost = (newPost) => {\r\n        setPosts([...posts, newPost]);\r\n        setModal(false);\r\n    };\r\n\r\n    //Get post from child component\r\n    const removePost = (post) => {\r\n        setPosts(posts.filter(p => p.id !== post.id));\r\n    };\r\n\r\n    const changePage = (page) => {\r\n        setPage(page);\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <MyButton\r\n                style={{marginTop: \"30px\"}}\r\n                onClick={() => setModal(true)}>\r\n                Create post\r\n            </MyButton>\r\n            <MyModal visible={modal} setVisible={setModal}>\r\n                <PostForm create={createPost}/>\r\n            </MyModal>\r\n            <hr style={{margin: '15px 0'}}/>\r\n            <PostFilter filter={filter} setFilter={setFilter}/>\r\n            <MySelect\r\n                value={limit}\r\n                onChange={value=> setLimit(value)}\r\n                defaultValue=\"Number of Elements on Page\"\r\n                option={[\r\n                    {value: 5, name: '5'},\r\n                    {value: 10, name: '10'},\r\n                    {value: 25, name: '25'},\r\n                    {value: -1, name: 'Show all'},\r\n                ]}\r\n            />\r\n            {postError &&\r\n            <h1>Error ${postError}</h1>\r\n            }\r\n            <PostList remove={removePost} posts={sortedAndSearchedPosts} title=\"Post About JS\"/>\r\n            <div ref={lastElement} style={{height: '20px', background: 'red'}}/>\r\n            {isPostsLoading &&\r\n                 <div style={{display: 'flex', justifyContent: 'center', marginTop: '50px'}}><Loader/></div>\r\n            }\r\n            <Pagination\r\n                page={page}\r\n                changePage={changePage}\r\n                totalPages={totalPages}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Posts;","import PostIdPage from \"../pages/PostIdPage\";\r\nimport Posts from \"../pages/Posts\";\r\nimport About from \"../pages/About\";\r\nimport Login from \"../pages/Login\";\r\n\r\nexport const privateRoutes = [\r\n    {path: '/about', component: About, exact: true},\r\n    {path: '/posts', component: Posts, exact: true},\r\n    {path: '/posts/:id', component: PostIdPage, exact: true},\r\n];\r\n\r\nexport const publicRoutes = [\r\n    {path: '/login', component: Login, exact: true},\r\n];","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <h1>\r\n            This app is created with studying purposes\r\n        </h1>\r\n    );\r\n};\r\n\r\nexport default About;","import {useEffect, useRef} from \"react\";\r\n\r\nexport const useObserver = (ref,  canLoad, isLoading, callback) => {\r\n    const observer = useRef();\r\n\r\n    useEffect(()=>{\r\n        if (isLoading) return;\r\n        if (observer.current) observer.current.disconnect();\r\n\r\n        const cb = function(entries, observer) {\r\n            if (entries[0].isIntersecting && canLoad) {\r\n               callback();\r\n            }\r\n        };\r\n        observer.current = new IntersectionObserver(cb);\r\n        observer.current.observe(ref.current);\r\n    }, [isLoading]);\r\n};","import React, {useContext} from 'react';\r\nimport MyInput from \"../Components/UI/input/MyInput\";\r\nimport MyButton from \"../Components/UI/button/MyButton\";\r\nimport {AuthContext} from \"../context\";\r\n\r\nconst Login = () => {\r\n    const {isAuth, setIsAuth} = useContext(AuthContext);\r\n\r\n    const login = event => {\r\n      event.preventDefault();\r\n      setIsAuth(true);\r\n      localStorage.setItem('auth', \"true\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login Page</h1>\r\n            <form onSubmit={login}>\r\n                <MyInput type=\"text\" placeholder=\"Enter login\"/>\r\n                <MyInput type=\"password\" placeholder=\"Enter password\"/>\r\n                <MyButton>Login</MyButton>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React, {useContext} from 'react';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport PostIdPage from \"../pages/PostIdPage\";\r\nimport Posts from \"../pages/Posts\";\r\nimport Error from \"../pages/Error\";\r\nimport About from \"../pages/About\";\r\nimport {publicRoutes, privateRoutes} from \"../router\";\r\nimport {AuthContext} from \"../context\";\r\nimport Loader from \"./UI/Loader/Loader\";\r\n\r\nconst AppRouter = () => {\r\n    const {isAuth, isLoading} = useContext(AuthContext);\r\n\r\n    if (isLoading) {\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        isAuth\r\n            ?\r\n            <Switch>\r\n                {privateRoutes.map(route =>\r\n                    <Route\r\n                        component={route.component}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        key={route.path}\r\n                    />\r\n                )}\r\n                <Redirect to='/posts'/>\r\n            </Switch>\r\n            :\r\n            <Switch>\r\n                {publicRoutes.map(route =>\r\n                    <Route\r\n                        component={route.component}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        key={route.path}\r\n                    />\r\n                )}\r\n                <Redirect to='/login'/>\r\n            </Switch>\r\n\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, {useEffect, useState} from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport Navbar from \"./Components/UI/Navbar/Navbar\";\nimport AppRouter from \"./Components/AppRouter\";\nimport {AuthContext} from \"./context\";\n\nfunction App() {\n    const [isAuth, setIsAuth] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(()=>{\n        if (localStorage.getItem('auth')) {\n            setIsAuth(true);\n        }\n        setIsLoading(false);\n    }, []);\n\n    return (\n        <AuthContext.Provider value={{\n            isAuth,\n            setIsAuth,\n            isLoading,\n        }}>\n            <BrowserRouter>\n                <Navbar/>\n                <AppRouter/>\n            </BrowserRouter>\n        </AuthContext.Provider>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}